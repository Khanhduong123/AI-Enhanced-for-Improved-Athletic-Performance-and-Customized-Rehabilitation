import os
import unicodedata
import shutil

# -------------------------------
# **B∆∞·ªõc 1: Chu·∫©n h√≥a chu·ªói ƒë·ªÉ so kh·ªõp t√™n**
# -------------------------------
def normalize_string(input_str):
    """Lo·∫°i b·ªè d·∫•u ti·∫øng Vi·ªát, chuy·ªÉn v·ªÅ lowercase, x√≥a kho·∫£ng tr·∫Øng"""
    nfkd_str = unicodedata.normalize("NFKD", input_str)
    no_accents = "".join([c for c in nfkd_str if not unicodedata.combining(c)])
    return no_accents.replace(" ", "").lower()

# -------------------------------
# **B∆∞·ªõc 2: ƒê·ªïi t√™n file video n·∫øu ch∆∞a ƒë√∫ng format**
# -------------------------------
def rename_videos(root_folder, members_dict, device_dict, output_folder):
    """Duy·ªát to√†n b·ªô th∆∞ m·ª•c v√† ƒë·ªïi t√™n file v·ªÅ format chu·∫©n, sau ƒë√≥ d·ªìn v√†o 1 th∆∞ m·ª•c"""
    phone_brands = device_dict.keys()  # ['iPhone', 'Samsung', 'Oppo']
    actions = ["Dangchanraxanghiengminh", "Ngoithangbangtrengot", "Sodatvuonlen", "Xemxaxemgan"]  # ƒê·ªông t√°c

    # T·∫°o th∆∞ m·ª•c ƒë√≠ch n·∫øu ch∆∞a c√≥
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # Duy·ªát t·ª´ng h√£ng ƒëi·ªán tho·∫°i
    for brand in phone_brands:
        brand_path = os.path.join(root_folder, brand)

        if not os.path.exists(brand_path):
            print(f"‚ùå L·ªói: Th∆∞ m·ª•c '{brand_path}' kh√¥ng t·ªìn t·∫°i!")
            continue

        # Duy·ªát t·ª´ng ƒë·ªông t√°c trong t·ª´ng h√£ng ƒëi·ªán tho·∫°i
        for action in actions:
            action_path = os.path.join(brand_path, action)

            if not os.path.exists(action_path):
                print(f"‚ùå L·ªói: Th∆∞ m·ª•c '{action_path}' kh√¥ng t·ªìn t·∫°i!")
                continue

            # Duy·ªát t·ª´ng file video trong th∆∞ m·ª•c ƒë·ªông t√°c
            for filename in os.listdir(action_path):
                file_path = os.path.join(action_path, filename)

                # B·ªè qua file n·∫øu kh√¥ng ph·∫£i .mp4
                if not filename.endswith(".mp4"):
                    continue

                # T√°ch t√™n file, b·ªè ph·∫ßn m·ªü r·ªông
                filename_without_ext, ext = os.path.splitext(filename)

                # Ki·ªÉm tra n·∫øu file ƒë√£ ƒë√∫ng format
                parts = filename_without_ext.split("_")
                if len(parts) == 4 and parts[3] == action:
                    print(f"‚úÖ File '{filename}' ƒë√£ ƒë√∫ng format, b·ªè qua.")
                    continue

                # Chu·∫©n h√≥a t√™n file ƒë·ªÉ t√¨m ID ph√π h·ª£p
                normalized_filename = normalize_string(filename_without_ext)

                video_id = None
                for id_, name in members_dict.items():
                    if normalize_string(name) in normalized_filename:
                        video_id = id_
                        break

                if video_id is None:
                    print(f"‚ö†Ô∏è B·ªè qua file '{filename}' v√¨ kh√¥ng t√¨m th·∫•y ID ph√π h·ª£p.")
                    continue

                # L·∫•y ID thi·∫øt b·ªã
                device_id = device_dict[brand]

                # ƒê·ªãnh d·∫°ng t√™n m·ªõi
                new_filename = f"{device_id}_{video_id}_{members_dict[video_id]}_{action}{ext}"
                new_path = os.path.join(output_folder, new_filename)

                # Ki·ªÉm tra n·∫øu file ƒë√£ t·ªìn t·∫°i trong th∆∞ m·ª•c ƒë√≠ch
                counter = 1
                while os.path.exists(new_path):
                    new_filename = f"{device_id}_{video_id}_{members_dict[video_id]}_{action}_copy{counter}{ext}"
                    new_path = os.path.join(output_folder, new_filename)
                    counter += 1

                # Di chuy·ªÉn file v√†o th∆∞ m·ª•c ƒë√≠ch v·ªõi t√™n m·ªõi
                try:
                    shutil.move(file_path, new_path)
                    print(f"‚úÖ ƒê√£ chuy·ªÉn & ƒë·ªïi t√™n: {filename} ‚ûù {new_filename}")
                except Exception as e:
                    print(f"‚ùå L·ªói khi di chuy·ªÉn & ƒë·ªïi t√™n {filename}: {e}")


# -------------------------------
# **B∆∞·ªõc 3: Chia video v√†o 4 th∆∞ m·ª•c t∆∞∆°ng ·ª©ng**
# -------------------------------
def organize_videos_by_action(root_folder):
    """Duy·ªát t·∫•t c·∫£ video trong 'all_videos/' v√† chia v√†o 4 th∆∞ m·ª•c theo ƒë·ªông t√°c"""
    
    # ƒê·ªãnh nghƒ©a c√°c ƒë·ªông t√°c
    actions = ["Dangchanraxanghiengminh", "Ngoithangbangtrengot", "Sodatvuonlen", "Xemxaxemgan"]

    # ƒê∆∞·ªùng d·∫´n th∆∞ m·ª•c ch·ª©a t·∫•t c·∫£ video
    all_videos_folder = os.path.join(root_folder, "all_videos")

    # T·∫°o 4 th∆∞ m·ª•c ƒë·ªông t√°c n·∫øu ch∆∞a c√≥
    for action in actions:
        action_folder = os.path.join(root_folder, action)
        if not os.path.exists(action_folder):
            os.makedirs(action_folder)

    # Duy·ªát t·∫•t c·∫£ video trong all_videos/
    for filename in os.listdir(all_videos_folder):
        file_path = os.path.join(all_videos_folder, filename)

        # B·ªè qua n·∫øu kh√¥ng ph·∫£i file video
        if not filename.endswith(".mp4"):
            continue

        # X√°c ƒë·ªãnh ƒë·ªông t√°c t·ª´ t√™n file
        for action in actions:
            if action in filename:
                destination_folder = os.path.join(root_folder, action)
                destination_path = os.path.join(destination_folder, filename)

                # Di chuy·ªÉn file v√†o th∆∞ m·ª•c t∆∞∆°ng ·ª©ng
                try:
                    shutil.move(file_path, destination_path)
                    print(f"‚úÖ ƒê√£ di chuy·ªÉn: {filename} ‚ûù {destination_folder}")
                except Exception as e:
                    print(f"‚ùå L·ªói khi di chuy·ªÉn {filename}: {e}")
                break  # Khi t√¨m th·∫•y ƒë·ªông t√°c, d·ª´ng v√≤ng l·∫∑p ƒë·ªÉ tr√°nh x√©t th√™m

    print("üéâ Ho√†n t·∫•t chia video v√†o 4 th∆∞ m·ª•c!")


# -------------------------------
# **B∆∞·ªõc 4: Ch·∫°y t·∫•t c·∫£ trong main()**
# -------------------------------
def main():
    # Dictionary mapping ID v·ªõi t√™n th√≠ sinh (ƒë·ªãnh d·∫°ng chu·∫©n)
    members_dict = {
        "01": "LePhanTheVinh",
        "02": "NguyenCatTuong",
        "03": "VuDucThienDung",
        "04": "NguyenNgocNhuThao",
        "05": "HoangVanLong",
        "06": "VoLeThanhTuyen",
        "07": "LuongHoangTrucVan",
        "08": "DoanVanNghia",
        "09": "NguyenDaoKimUyen",
        "10": "TranVietDangKhoa",
        "11": "TranCongQuangLong",
        "12": "NguyenLamSon",
        "13": "LeTanKha"
    }

    # Mapping ID thi·∫øt b·ªã
    device_dict = {
        "iPhone": "01",
        "Samsung": "02",
        "Oppo": "03"
    }

    # Th∆∞ m·ª•c g·ªëc ch·ª©a t·∫•t c·∫£ video
    root_folder = r"D:\FPT\CN9\Thesis\private_data"  # üõ† Thay ƒë∆∞·ªùng d·∫´n ph√π h·ª£p
    output_folder = os.path.join(root_folder, "all_videos")  # Th∆∞ m·ª•c ƒë√≠ch

    # G·ªçi h√†m ƒë·ªïi t√™n file video
    rename_videos(root_folder, members_dict, device_dict, output_folder)
    organize_videos_by_action(root_folder)


    print("üéâ Ho√†n t·∫•t qu√° tr√¨nh x·ª≠ l√Ω video!")

if __name__ == "__main__":
    main()
